{"version":3,"sources":["components/Header.js","components/Item.js","components/List.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","onKeyUp","event","key","target","value","trim","todoObj","id","nanoid","name","isDone","addTodoItem","alert","type","placeholder","Item","useState","mouse","setMouse","handleMouse","flag","style","backgroundColor","onMouseEnter","onMouseLeave","checked","onChange","updateTodoItem","onClick","deleteTodoItem","handleDelete","display","List","todos","map","todo","Footer","completedTodoCount","reduce","pre","total","length","checkAllTodo","deleteAllCompleted","App","setTodos","newTodos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47357535.chunk.js","sourcesContent":["import {nanoid} from 'nanoid'\nimport PropTypes from 'prop-types'\nimport './Header.css'\n\nconst Header = props => {\n\n    const handleKeyUp = event=>{\n        const {key, target} = event\n        if (key !== \"Enter\") return\n        if (target.value.trim() === ''){\n            alert('You have to input something')\n            return\n        }\n        const todoObj = {id: nanoid(), name:target.value, isDone: false}\n        props.addTodoItem(todoObj)\n        target.value = ''\n    }\n    \n    return (\n        <div className=\"todo-header\">\n            <input onKeyUp={handleKeyUp} type=\"text\" placeholder=\"Please enter your task. Press Enter to confirm.\" />\n        </div>\n    )\n}\n\nHeader.propTypes = {\n    addTodoItem: PropTypes.func.isRequired\n};\n\nexport default Header;","import { useState } from \"react\";\nimport './Item.css'\n\nconst Item = props => {\n\n    const [mouse, setMouse] = useState(false)\n    const handleMouse = (flag) => {\n        return () => {\n            setMouse(flag)\n        }\n    }\n\n    const handleCheck = (id) => {\n        return (event) => {\n            props.updateTodoItem(id, event.target.checked)\n        }\n    }\n\n    const handleDelete = (id) => {\n        return () => {\n            props.deleteTodoItem(id)\n        }\n    }\n\n    return (\n        <li style={{ backgroundColor: mouse ? '#ddd' : 'white' }} onMouseEnter={handleMouse(true)} onMouseLeave={handleMouse(false)}>\n            <label>\n                <input type=\"checkbox\" checked={props.isDone} onChange={handleCheck(props.id)} />\n                <span>{props.name}</span>\n            </label>\n            <button onClick={handleDelete(props.id)} className=\"btn btn-danger\" style={{ display: mouse ? 'block' : 'none' }}>Delete</button>\n        </li>\n    )\n}\n\nexport default Item;","import Item from '../components/Item';\nimport PropTypes from 'prop-types'\nimport './List.css'\n\nconst List = props => {\n    \n    return (\n        <ul className=\"todo-main\">\n            {\n                props.todos.map((todo)=>{\n                    return <Item key={todo.id} {...todo} updateTodoItem={props.updateTodoItem} deleteTodoItem={props.deleteTodoItem}/>\n                })\n            }\n        </ul>\n    )\n}\n\nList.propTypes = {\n    todos: PropTypes.array.isRequired,\n    updateTodoItem: PropTypes.func.isRequired,\n    deleteTodoItem: PropTypes.func.isRequired,\n}\n\nexport default List;","import './Footer.css'\n\nconst Footer = props => {\n\n    const completedTodoCount = props.todos.reduce((pre, todo)=>{return pre + (todo.isDone? 1: 0)}, 0)\n    const total = props.todos.length\n\n    const handleCheckAll = event => {\n        props.checkAllTodo(event.target.checked)\n    }\n\n    const handleDeleteAllCompleted = () => {\n        props.deleteAllCompleted()\n    }\n\n    return (\n        <div className=\"todo-footer\">\n            <label>\n                <input type=\"Checkbox\" onChange={handleCheckAll} checked={completedTodoCount === total && total !== 0 ? true: false}/>\n            </label>\n            <span>\n                <span>Completed: {completedTodoCount}</span> / Total:{total}\n            </span>\n            <button onClick={handleDeleteAllCompleted} className=\"btn btn-danger\">Remove completed task(s)</button>\n        </div>\n    )\n}\n\nexport default Footer;","// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [todos, setTodos] = useState([{ id: '001', name: 'grocery', isDone: true },\n  { id: '002', name: 'Meeting with the professor', isDone: false },\n  { id: '003', name: 'Interview', isDone: true }])\n\n  const addTodoItem = (todoObj) => {\n    const newTodos = [todoObj, ...todos]\n    setTodos(newTodos)\n  }\n\n  const updateTodoItem = (id, isDone) => {\n    const newTodos = todos.map((todoObj) => {\n      if (todoObj.id === id) return { ...todoObj, isDone: isDone }\n      else return todoObj\n    })\n    setTodos(newTodos)\n  }\n\n  const deleteTodoItem = (id) => {\n    const newTodos = todos.filter((todoObj) => {\n      return todoObj.id !== id\n    })\n    setTodos(newTodos)\n  }\n\n  const checkAllTodo = (isDone) => {\n    const newTodos = todos.map((todoObj) => {\n      return { ...todoObj, isDone }\n    })\n    setTodos(newTodos)\n  }\n\n  const deleteAllCompleted = () => {\n    const newTodos = todos.filter((todoObj) => {\n      return !todoObj.isDone\n    })\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"todo-wrap\">\n        <Header addTodoItem={addTodoItem} />\n        <List todos={todos} updateTodoItem={updateTodoItem} deleteTodoItem={deleteTodoItem} />\n        <Footer todos={todos} checkAllTodo={checkAllTodo} deleteAllCompleted={deleteAllCompleted} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}